<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux的正确打开姿势</title>
      <link href="2020/10/16/linux-shell/"/>
      <url>2020/10/16/linux-shell/</url>
      
        <content type="html"><![CDATA[<h1 id="内核与发行版"><a href="#内核与发行版" class="headerlink" title="内核与发行版"></a>内核与发行版</h1><h2 id="内核"><a href="#内核" class="headerlink" title="内核"></a>内核</h2><ul><li>系统核心，一般包括5大部分<ul><li>进程管理</li><li>存储管理</li><li>文件管理</li><li>设备管理</li><li>网络管理</li></ul></li></ul><h2 id="发行版"><a href="#发行版" class="headerlink" title="发行版"></a>发行版</h2><ul><li><p>以内核为中心，集成各种系统管理软件应用工具组成的一套操作系统，称为Linux发行版</p><ul><li>CentOS（本文主要以CentOS为例进行说明)<ul><li>RedHat的社区版</li><li>稳定</li></ul></li><li>Ubuntu<ul><li>安装简单</li><li>界面华丽</li><li>驱动支持</li><li>社区活跃</li><li>更新频繁</li><li>基于Debian</li></ul></li><li>Debian<ul><li>软件包通常是稳定的，而不是最新的</li><li>社区维护</li><li>apt软件包管理</li><li>默认不包含任何专业驱动</li></ul></li><li>Oracle Linux<ul><li>专门为Oracle数据库进行优化，性能提高迅猛</li><li>基于RedHat</li></ul></li><li>openSUSE<ul><li>没用过</li></ul></li></ul></li><li><p>各发行版间的包管理器</p><ul><li>Debian<ul><li>apt</li></ul></li><li>CentOS<ul><li>yum</li></ul></li><li>openSUSE<ul><li>YaST</li></ul></li></ul></li></ul><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="终端快捷键"><a href="#终端快捷键" class="headerlink" title="终端快捷键"></a>终端快捷键</h2><ul><li>移动至行首行尾 <code>ctrl+a, ctrl+e</code></li><li>中断与退出终端<code>ctrl+c, ctrl+d</code></li><li>后台运行，如果忘了输入<code>&amp;</code>可以使用<code>ctrl+z</code></li><li>清空<code>ctrl+c</code></li><li>丢弃命令，丢弃光标前后的命令 <code>ctrl+u,ctrl+k</code></li><li>丢弃光标前的单词 <code>ctrl+w</code></li><li>丢弃的内容需要复制 <code>ctrl+y</code></li><li>显示上/下一条命令<code>ctrl+p, ctrl+n</code></li><li>搜索历史命令<code>ctrl+r</code></li></ul><h2 id="sh解释器"><a href="#sh解释器" class="headerlink" title="sh解释器"></a>sh解释器</h2><ul><li>查看系统支持哪些shell</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>sulin@localhost ~<span class="token punctuation">]</span>$ <span class="token function">cat</span> /etc/shells/bin/sh/bin/bash/usr/bin/sh/usr/bin/bash/bin/tcsh/bin/csh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>/bin/sh</code><ul><li>当某行代码出错时，不继续往下解释</li><li>相当于<code>/bin/bash --posix</code></li></ul></li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>sulin@localhost ~<span class="token punctuation">]</span>$ <span class="token function">ls</span> -l /bin/shlrwxrwxrwx. 1 root root 4 10月 11 2019 /bin/sh -<span class="token operator">></span> <span class="token function">bash</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p><code>/bin/bash</code></p></li><li><p>放在脚本中第一行指定文件类型</p><ul><li><code>#!</code>占用2个字节的魔法</li><li><code>#!/bin/sh</code></li><li><code>#!/bin/bash</code></li></ul></li><li><p>用户的默认Shell设置</p><ul><li>在文件<code>/etc/passwd</code>中设置</li></ul></li></ul><h2 id="启动停止命令"><a href="#启动停止命令" class="headerlink" title="启动停止命令"></a>启动停止命令</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#启动到命令行界面</span>systemctl set-default multi-user.target<span class="token comment" spellcheck="true">#启动到图形界面</span>systemctl set-default graphical.target<span class="token comment" spellcheck="true">#重启</span><span class="token function">shutdown</span> -r now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="用户管理命令"><a href="#用户管理命令" class="headerlink" title="用户管理命令"></a>用户管理命令</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#添加用户</span><span class="token function">useradd</span><span class="token comment" spellcheck="true">#删除用户</span><span class="token function">userdel</span><span class="token comment" spellcheck="true">#修改用户</span><span class="token function">usermod</span><span class="token comment" spellcheck="true">#修改密码</span><span class="token function">passwd</span><span class="token comment" spellcheck="true">#改变文件或目录的权限</span><span class="token function">chmod</span><span class="token comment" spellcheck="true">#改变所有者</span><span class="token function">chown</span><span class="token comment" spellcheck="true">#改变所属组</span><span class="token function">chgrp</span><span class="token comment" spellcheck="true">#添加组</span><span class="token function">groupadd</span><span class="token comment" spellcheck="true">#修改组</span><span class="token function">groupmod</span><span class="token comment" spellcheck="true">#删除组</span><span class="token function">groupdel</span><span class="token comment" spellcheck="true">#给组加密码</span>gpasswd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><ul><li>命令</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">echo</span><span class="token function">env</span><span class="token keyword">set</span><span class="token function">export</span>unset<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>常用变量</li></ul><pre class="line-numbers language-bash"><code class="language-bash">HOMELOGNAMEMAILPATHHOSTNAMEPS1PWDSHELLTERMLANG<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>环境变量文件<ul><li><code>/etc/profile</code><ul><li>用户登录或su -命令切换时执行，Login shell执行，Non-login shell不执行</li><li>全局变量</li><li>循环执行<code>/etc/profile.d</code>中的脚本，<code>profile.d</code>目录下的脚本文件包括各应用的初始配置</li></ul></li><li><code>/etc/bashrc</code><ul><li>执行完/etc/profile后运行bash shell就会执行</li><li>每执行一次bash shell执行一次</li></ul></li><li><code>~/.bash_profile</code><ul><li><code>/etc/profile</code>的用户级别设置</li><li>Login shell执行，Non-login shell不执行</li><li>默认情况会执行用户的<code>~/.bashrc</code></li></ul></li><li><code>~/.bashrc</code><ul><li>用户级别设置，打开新shell时执行</li></ul></li><li><code>~/.bash_logout</code><ul><li>退出shell时执行</li><li>删除临时文件等</li></ul></li></ul></li></ul><h2 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h2><h3 id="更新yum源"><a href="#更新yum源" class="headerlink" title="更新yum源"></a>更新yum源</h3><ul><li><a href="https://developer.aliyun.com/mirror/centos">ali源</a></li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> /etc/yum.repos.d/<span class="token function">mv</span> CentOS-Base.repo CentOS-Base.repo.backup<span class="token function">wget</span> -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-8.repoyum clean allyum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="补充一波wget"><a href="#补充一波wget" class="headerlink" title="补充一波wget"></a>补充一波wget</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#爬个虫</span><span class="token function">wget</span> -r -p -nc -np -k -c --progress<span class="token operator">=</span>bar http://www.dcdapp.com<span class="token comment" spellcheck="true">#帮助文档</span><span class="token function">wget</span> --help<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>部分参数说明<ul><li><code>-r</code> –recursive指定递归下载</li><li><code>-p</code> –page-requisites下载所有用于显示 HTML 页面的图片之类的元素。</li><li><code>-nc</code> –no-clobber skip downloads that would download to existing files (overwriting them).</li><li><code>-np</code>–no-parent 不追溯至父目录。</li><li><code>-k</code>–convert-links 让下载得到的 HTML 或 CSS 中的链接指向本地文件。</li><li><code>-c</code> –continue 断点续传下载文件。–progress=TYPE 选择进度条类型。</li><li><code>-b</code> –background 启动后转入后台。</li><li><code>-O</code> –output-document=FILE  将文档写入 FILE。</li><li><code>-P</code> –directory-prefix=PREFIX 以 PREFIX/… 保存文件</li><li><code>-t</code> –tries=NUMBER      设置重试次数为 NUMBER (0 代表无限制)。</li></ul></li></ul><h3 id="介绍了wget，怎能不介绍curl"><a href="#介绍了wget，怎能不介绍curl" class="headerlink" title="介绍了wget，怎能不介绍curl"></a>介绍了wget，怎能不介绍curl</h3><ul><li><p>常用参数</p><ul><li><p><code>-o</code>指定文件名</p><pre class="line-numbers language-bash"><code class="language-bash">curl -o <span class="token comment" spellcheck="true">#1_#2.tar.gz http://www.xxxx.com/{a1,a2}/xo[1-5].tar.gz</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>-O</code>–remote-name   Write output to a file named as the remote file</p><pre class="line-numbers language-bash"><code class="language-bash">curl -O http://www.xxxx.com/<span class="token punctuation">{</span>a1,a2<span class="token punctuation">}</span>/xo<span class="token punctuation">[</span>1-5<span class="token punctuation">]</span>.tar.gz<span class="token comment" spellcheck="true">#补充一个grep的转义，字符-需要使用\进行转义，并且查询内容要用单引号框起来才能查询出结果，如下所示：</span>curl --help<span class="token operator">|</span><span class="token function">grep</span> <span class="token string">'\-O'</span>-O, --remote-name   Write output to a <span class="token function">file</span> named as the remote <span class="token function">file</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>-r</code> 分块下载，–range RANGE  Retrieve only the bytes within a range</p><pre class="line-numbers language-bash"><code class="language-bash">curl -r 0-10000 -o file_part1.tar.gz http://www.xxx.com/xxx.tar.gzcurl -r 10000-20000 -o file_part2.tar.gz http://www.xxx.com/xxx.tar.gzcurl -r 20000- -o file_part3.tar.gz http://www.xxx.com/xxx.tar.gz<span class="token function">cat</span> file_part* <span class="token operator">></span> file.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>-T</code>–upload-file FILE Transfer FILE to destination</p></li><li><p><code>-F</code> –form &lt;name=content&gt; 模拟http表单提交数据</p></li><li><p><code>-c</code>–cookie-jar-file 操作结束后把cookie写入到这个文件中</p></li><li><p><code>-D</code> 保存头信息</p><pre class="line-numbers language-bash"><code class="language-bash">curl -c ./ck_c.txt -D ./ck_d.txt -F name<span class="token operator">=</span>xxx -F pass<span class="token operator">=</span>yyy http://www.xoxo.com/logincurl -T pic<span class="token operator">=</span>@localfile http://www.xoxo.com/upload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li></ul><ul><li><p><code>-A</code>随意指定当前浏览器信息</p></li><li><p><code>-b</code>使用cookie文件</p></li><li><p><code>-C</code>断点续传</p></li><li><p><code>-d</code>使用POST</p><pre class="line-numbers language-bash"><code class="language-bash">curl -d <span class="token string">"name=xxx&amp;pass=yyy"</span> http://www.xoxo.com/login<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>-v</code> verbose，打印更多信息</p></li><li><p><code>-m</code> –max-time <seconds> 指定处理的最大时长</seconds></p></li></ul><ul><li><p><code>-H</code>指定请求头</p></li><li><p><code>-H</code>–header </p><header> 指定请求头参数<p></p></header></li><li><p><code>-s</code>–slient 减少输出的信息</p></li><li><p><code>--connect-timeout</code>指定尝试连接的最大时长</p></li><li><p><code>-x/--proxy</code>指定代理服务器地址和端口，端口默认为1080</p></li><li><p><code>--retry</code>  指定重试次数</p></li><li><p><code>-e/--referer</code> 指定引用地址</p></li><li><p><code>-I/--head</code> 仅返回头部信息，使用HEAD请求</p></li><li><p><code>-u/--user</code>设置服务器的用户和密码</p></li></ul><h3 id="介绍分段下载时，下载了文件file-tar-gz，下面介绍打包和压缩"><a href="#介绍分段下载时，下载了文件file-tar-gz，下面介绍打包和压缩" class="headerlink" title="介绍分段下载时，下载了文件file.tar.gz，下面介绍打包和压缩"></a>介绍分段下载时，下载了文件file.tar.gz，下面介绍打包和压缩</h3><ul><li><p>命令如下</p><table><thead><tr><th>文件格式</th><th>解压命令</th><th>压缩命令</th></tr></thead><tbody><tr><td>*.tar</td><td>tar -xvf</td><td>tar -cvf</td></tr><tr><td>*.gz</td><td>gzip -d 或 gunzip</td><td>gzip xoxo</td></tr><tr><td>*.tar.gz *.tgz</td><td>tar -xzf</td><td>tar -zcvf</td></tr><tr><td>*.zip</td><td>unzip</td><td></td></tr><tr><td>*.rar</td><td>unrar e</td><td></td></tr><tr><td>*.tar.Z</td><td></td><td></td></tr><tr><td>*.Z</td><td></td><td></td></tr><tr><td>*.tar.bz2</td><td></td><td></td></tr><tr><td>*.bz2s</td><td></td><td></td></tr></tbody></table></li></ul><h2 id="打包完成后，不知道文件放哪里了，需要使用find命令"><a href="#打包完成后，不知道文件放哪里了，需要使用find命令" class="headerlink" title="打包完成后，不知道文件放哪里了，需要使用find命令"></a>打包完成后，不知道文件放哪里了，需要使用find命令</h2><ul><li><p>常用参数</p><table><thead><tr><th>参数名</th><th><strong>描述</strong></th><th><strong>参数名</strong></th><th>描述</th></tr></thead><tbody><tr><td><strong>-newer</strong></td><td>文件最近一次修改比 file 修改时间要晚</td><td><strong>-perm</strong></td><td>按执行权限来查找</td></tr><tr><td><strong>-anewer</strong></td><td>文件最近一次访问比 file 修改时间要晚</td><td><strong>-type</strong></td><td>按照文件类型来查找</td></tr><tr><td><strong>-cnewer</strong></td><td>文件状态最近一次修改比 file 修改时间要晚</td><td><strong>-size</strong></td><td>按照文件的大小来进行查找</td></tr><tr><td><strong>-amin</strong></td><td>文件最近一次访问是在 n 分钟之前</td><td><strong>-user</strong></td><td>按文件所属用户来查找</td></tr><tr><td><strong>-atime</strong></td><td>文件最近一次访问是在 n*24 小时之前</td><td><strong>-group</strong></td><td>按文件所属用户组来查找</td></tr><tr><td><strong>-cmin</strong></td><td>文件状态最近一次修改是在 n 分钟之前</td><td><strong>-nouser</strong></td><td>无有效所属用户的文件</td></tr><tr><td><strong>-ctime</strong></td><td>文件状态最近一次修改是在 n*24 小时之前</td><td><strong>-nogroup</strong></td><td>无有效所属用户组的文件</td></tr><tr><td><strong>-mmin</strong></td><td>文件内容最近一次修改是在 n 分钟之前</td><td><strong>-empty</strong></td><td>空的普通文件或者空目录</td></tr><tr><td><strong>-mtime</strong></td><td>文件内容最近一次修改是在 n*24 小时之前</td><td></td><td></td></tr></tbody></table></li><li><p><code>-exec -ok</code> 参数</p><ul><li>查找出来并执行命令</li></ul></li><li><p>示例</p><pre class="line-numbers language-hash"><code class="language-hash">[sulin@localhost tmp]$ echo "1" > 1.txt[sulin@localhost tmp]$ echo "2" > 2.txt[sulin@localhost tmp]$ echo "3" > 3.txt[sulin@localhost tmp]$ echo "4" > 4.txt[sulin@localhost tmp]$ echo "10" > 10.txt#查找文件[sulin@localhost tmp]$ find -name "1*.txt"./1.txt./10.txt#查找文件并执行ls -la命令[sulin@localhost tmp]$ find -name "1*.txt" -exec ls -la {} \;-rw-rw-r--. 1 sulin sulin 2 10月 17 00:44 ./1.txt-rw-rw-r--. 1 sulin sulin 3 10月 17 00:45 ./10.txt#查找文件并执行rm操作[sulin@localhost tmp]$ find -name "1*.txt" -exec rm {} \;[sulin@localhost tmp]$ ls2.txt  3.txt  4.txt#查找文件并执行rm操作，并提示确认[sulin@localhost tmp]$ find -name "2*.txt" -ok rm {} \;< rm ... ./2.txt > ? ycd /etcfind . -maxdepth 1 -cnewer yum.conf -a -not -cnewer purple -anewer ghostscript -a -type d -a -emptyfind -size +640find -size -640#查找文件大小小于1[sulin@localhost etc]$ find . -maxdepth 1 -size -1./crypttab./environment./exports./motd./.pwd.lock./subgid./subuid./cron.deny./wvdial.conf#文件大小大于100[sulin@localhost etc]$ find . -maxdepth 1 -size +100./services./ld.so.cache#文件大小小于1或者大于100的总行数[sulin@localhost etc]$ find . -maxdepth 1 -size -1 -o -size +100|wc -l11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="vi介绍"><a href="#vi介绍" class="headerlink" title="vi介绍"></a>vi介绍</h2><ul><li><p>保存和退出：<code>:w</code>,<code>:wq</code>,<code>:x</code>,<code>:q</code>,<code>:q!</code></p></li><li><p>编辑：</p><ul><li>常用的：<code>i</code>,<code>a</code>,<code>x</code>,<code>r</code><ul><li>大些<code>I</code>,<code>A</code>分别代码行首行末追加</li></ul></li><li>较常用的增加空行：<code>o</code>,<code>O</code></li><li>撤销与redu：<code>u</code>，<code>ctrl+r</code></li><li>删除行：<code>dd</code></li></ul></li><li><p>光标</p><ul><li><p>上下翻页</p><ul><li>翻一页<code>ctrl+f,ctrl+b</code>，forward &amp; back</li><li>翻半页<code>ctrl+u,ctrl+d</code>，up &amp; down</li></ul></li><li><p>移动</p><ul><li><code>ctrl+e</code></li></ul></li><li><p>行首行尾</p><ul><li><code>^</code>,<code>$</code></li></ul></li><li><p>文首文尾</p><ul><li><code>gg</code>,<code>G</code>,<code>:1</code>,<code>:$</code></li></ul></li><li><p>跳到第n行</p><ul><li><code>ngg</code>，比如<code>5gg</code>跳转到第五行，或者<code>:5</code></li><li><code>:set number</code> 显示行号</li></ul></li><li><p>上下左右</p><ul><li><code>h j k l</code></li></ul></li></ul></li><li><p>复制粘贴</p><ul><li><p>复制</p><ul><li><code>yy</code>,<code>nyy</code> 复制一行或n行</li></ul></li><li><p>粘贴</p><ul><li><code>p</code></li></ul></li></ul></li><li><p>匹配</p><ul><li><p>向后搜索 <code>/pattern</code></p></li><li><p>向前搜索<code>?pattern</code></p></li><li><p>搜索整个文件，替换 <code>:%s/old/new/g</code></p></li><li><p>搜索整个文件，替换需要确认 <code>:%s/old/new/g</code></p></li><li><p>下一个/上一个匹配 <code>n</code>,<code>N</code> </p></li></ul></li><li><p>查看命令执行结果</p><ul><li><code>:!pwd</code></li></ul></li><li><p>保存的时候没有权限</p><p><code>:w !sudo tee %</code></p></li></ul><h2 id="rmp包管理"><a href="#rmp包管理" class="headerlink" title="rmp包管理"></a>rmp包管理</h2><ul><li><p>示例</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#安装</span>rpm -ivh xxx.rpm<span class="token comment" spellcheck="true">#更新</span>rpm -Uvh xxx.rpm<span class="token comment" spellcheck="true">#删除</span>rmp -e xxx.rmp<span class="token comment" spellcheck="true">#查询</span>rmp -qa<span class="token comment" spellcheck="true">#查询xxx</span>rmp -qa<span class="token operator">|</span> <span class="token function">grep</span> -i xxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>参数说明</p><ul><li><code>-i</code> 安装 install</li><li><code>-v</code> 显示执行过程</li><li><code>-h</code> 显示进度</li><li><code>-e</code> 删除</li><li><code>-q</code> 询问模式</li><li><code>-a</code> 查询所有软件包</li><li><code>-U</code> 升级</li></ul></li></ul><h2 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h2><ul><li><p>rpm查询指定软件包时使用了管道命令，现在介绍如何使用管道命令</p></li><li><p>用法：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#将cmd1的输出作为cmd2的输入，cmd2的输出作为cmd3的输入</span>cmd1 <span class="token operator">|</span> cmd2 <span class="token operator">|</span> <span class="token punctuation">..</span>. <span class="token operator">|</span> cmdn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>常在管道中使用的命令</p><ul><li><p><code>grep</code></p></li><li><p><code>sort</code> 默认以文本排序，如果要按数字排序，加上参数<code>-n</code></p></li><li><p><code>paste</code></p></li><li><p><code>wc</code></p></li><li><p><code>tee</code></p></li><li><p><code>xargs</code></p></li><li><p><code>expand</code></p></li><li><p><code>join</code></p></li><li><p><code>tr</code></p></li><li><p><code>col</code></p></li><li><p><code>cut</code></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#按空格分割取第一列</span>last<span class="token operator">|</span><span class="token function">cut</span> -d <span class="token string">' '</span> -f 1<span class="token comment" spellcheck="true">#按:分割取第一和第六列</span><span class="token function">cat</span> /etc/passwd<span class="token operator">|</span> <span class="token function">cut</span> -d <span class="token string">':'</span> -f 1,6<span class="token comment" spellcheck="true">#取第一到第六个字符</span><span class="token function">cat</span> /etc/passwd<span class="token operator">|</span> <span class="token function">cut</span> -c 1-6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><ul><li><p>示例</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#先通过grep --help查找出grep命令的帮助，然后匹配`-c`的结果，结果有9行</span><span class="token punctuation">[</span>sulin@localhost java<span class="token punctuation">]</span>$ <span class="token function">grep</span> --help<span class="token operator">|</span><span class="token function">grep</span> -n <span class="token string">'\-c'</span>13:  -i, --ignore-case         忽略大小写25:  -m, --max-count<span class="token operator">=</span>NUM       NUM 次匹配后停止53:  -c, --count               print only a count of matching lines per FILE58:  -B, --before-context<span class="token operator">=</span>NUM  打印以文本起始的NUM 行59:  -A, --after-context<span class="token operator">=</span>NUM   打印以文本结尾的NUM 行60:  -C, --context<span class="token operator">=</span>NUM         打印输出文本NUM 行61:  -NUM                      same as --context<span class="token operator">=</span>NUM64:      --color<span class="token punctuation">[</span><span class="token operator">=</span>WHEN<span class="token punctuation">]</span>,65:      --colour<span class="token punctuation">[</span><span class="token operator">=</span>WHEN<span class="token punctuation">]</span>       use markers to highlight the matching strings<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#查找匹配-c的行数，总共9行</span><span class="token punctuation">[</span>sulin@localhost java<span class="token punctuation">]</span>$ <span class="token function">grep</span> --help<span class="token operator">|</span><span class="token function">grep</span> -c <span class="token string">'\-c'</span>9<span class="token comment" spellcheck="true">#查看profile文件的行数</span><span class="token punctuation">[</span>sulin@localhost etc<span class="token punctuation">]</span>$ <span class="token function">cat</span> /etc/profile<span class="token operator">|</span><span class="token function">wc</span> -l82<span class="token comment" spellcheck="true">#查看passwd文件，按:分割第一段后排序，取出前2个结果</span><span class="token punctuation">[</span>sulin@localhost etc<span class="token punctuation">]</span>$ <span class="token function">cat</span> /etc/passwd <span class="token operator">|</span><span class="token function">sort</span> -t <span class="token string">':'</span> -k 1<span class="token operator">|</span> <span class="token function">head</span> -n 2abrt:x:173:173::/etc/abrt:/sbin/nologinadm:x:3:4:adm:/var/adm:/sbin/nologin<span class="token comment" spellcheck="true">#查询登录历史，排序，去重，然后转换成大写</span><span class="token punctuation">[</span>sulin@localhost ~<span class="token punctuation">]</span>$ last <span class="token operator">|</span><span class="token function">cut</span> -d <span class="token string">' '</span> -f 1<span class="token operator">|</span><span class="token function">sort</span><span class="token operator">|</span><span class="token function">uniq</span> -c<span class="token operator">|</span> <span class="token function">tr</span> a-z A-Z      1      10 REBOOT     21 SULIN      1 WTMP<span class="token comment" spellcheck="true">#连接与合并</span><span class="token punctuation">[</span>sulin@localhost tmp<span class="token punctuation">]</span>$ <span class="token keyword">echo</span> <span class="token string">'test1 1'</span><span class="token operator">></span>1.txt<span class="token punctuation">[</span>sulin@localhost tmp<span class="token punctuation">]</span>$ <span class="token function">cat</span> 1.txt test1 1<span class="token punctuation">[</span>sulin@localhost tmp<span class="token punctuation">]</span>$ <span class="token function">rm</span> *<span class="token punctuation">[</span>sulin@localhost tmp<span class="token punctuation">]</span>$ <span class="token keyword">echo</span> <span class="token string">'test1 1'</span><span class="token operator">>></span>1.txt<span class="token punctuation">[</span>sulin@localhost tmp<span class="token punctuation">]</span>$ <span class="token keyword">echo</span> <span class="token string">'test2 1'</span><span class="token operator">>></span>1.txt<span class="token punctuation">[</span>sulin@localhost tmp<span class="token punctuation">]</span>$ <span class="token function">cat</span> 1.txt test1 1test2 1<span class="token punctuation">[</span>sulin@localhost tmp<span class="token punctuation">]</span>$ <span class="token keyword">echo</span> <span class="token string">'test1 2'</span><span class="token operator">>></span>2.txt<span class="token punctuation">[</span>sulin@localhost tmp<span class="token punctuation">]</span>$ <span class="token keyword">echo</span> <span class="token string">'test2 2'</span><span class="token operator">>></span>2.txt<span class="token punctuation">[</span>sulin@localhost tmp<span class="token punctuation">]</span>$ <span class="token function">cat</span> 2.txt test1 2test2 2<span class="token punctuation">[</span>sulin@localhost tmp<span class="token punctuation">]</span>$ <span class="token function">join</span> 1.txt 2.txt test1 1 2test2 1 2<span class="token punctuation">[</span>sulin@localhost tmp<span class="token punctuation">]</span>$ <span class="token function">paste</span> 1.txt 2.txt test1 1    test1 2test2 1    test2 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="源码编译和安装"><a href="#源码编译和安装" class="headerlink" title="源码编译和安装"></a>源码编译和安装</h2><ul><li>Linux上的软件都经过GPL授权，因此几乎都有源码，源码需要进行编译生成二进制文件才能执行</li><li>一般情况下步骤如下：<ul><li>copy | wget源码</li><li>查看INSTALL文件和README文件</li><li>./configure</li><li>make clean &amp; make</li><li>make install</li></ul></li></ul><h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><ul><li><p>概念</p><ul><li><p>标准输入 <code>stdin</code> 文件描述符<code>0</code></p></li><li><p>标准输出 <code>stdout</code> 文件描述符<code>1</code></p></li><li><p>错误输出 <code>stderr</code> 文件描述符 <code>2</code></p></li><li><p><code>0 1 2</code>是如何定义的</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>sulin@localhost ~<span class="token punctuation">]</span>$ ll /dev/std*lrwxrwxrwx. 1 root root 15 10月 17 00:22 /dev/stderr -<span class="token operator">></span> /proc/self/fd/2lrwxrwxrwx. 1 root root 15 10月 17 00:22 /dev/stdin -<span class="token operator">></span> /proc/self/fd/0lrwxrwxrwx. 1 root root 15 10月 17 00:22 /dev/stdout -<span class="token operator">></span> /proc/self/fd/1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><ul><li><p>示例</p><ul><li>输出重定向</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#标准输出重定向到文件，覆盖文件</span><span class="token function">ls</span> -l <span class="token operator">></span> log.txt<span class="token comment" spellcheck="true">#追加到文件</span><span class="token function">ls</span> -l <span class="token operator">>></span> log.txt<span class="token comment" spellcheck="true">#将错误输出重定向到文件，覆盖文件</span>commond 2 <span class="token operator">></span> err.txt<span class="token comment" spellcheck="true">#追加</span>commond 2 <span class="token operator">>></span> err.txt<span class="token comment" spellcheck="true">#输出追加到log，错误重定向到输出</span>commond <span class="token operator">>></span> log.txt 2<span class="token operator">></span><span class="token operator">&amp;</span>1<span class="token comment" spellcheck="true">#同上</span>commond <span class="token operator">&amp;</span> <span class="token operator">>></span> log.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>输入重定向</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#将文件作为命令的标准输入</span>commond <span class="token operator">&lt;</span> <span class="token function">file</span><span class="token comment" spellcheck="true">#从标准输入读，直到分界符停止</span>commond <span class="token operator">&lt;&lt;</span> EOF<span class="token comment" spellcheck="true">#文件1作为标准输入，并重定向输出到文件2</span>commond <span class="token operator">&lt;</span> file1 <span class="token operator">></span> file2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>/dev/null</code></li></ul></li></ul><h2 id="网络命令"><a href="#网络命令" class="headerlink" title="网络命令"></a>网络命令</h2><ul><li><p>端口</p><ul><li><code>netstat -nltp</code></li></ul></li><li><p>防火墙</p><ul><li><p>使用内置防火墙</p><pre class="line-numbers language-shell"><code class="language-shell">#临时操作systemctl status firewalldsystemctl start firewalldsystemctl stop firewalld#永久操作，开机启动systemctl enable firewalldsystemctl disable firewalld#打开关闭端口firewall-cmd --zone=public --add-port=8080/tcp --permanentfirewall-cmd --zone=public --remove-port=8080/tcp --permanent#配置立即生效firewall-cmd --reload#查看打开的端口firewall-cmd --zone=public --list-ports#防火墙状态firewall-cmd --state#centos7默认没有 netstat 命令，需要安装 net-tools 工具，yum install -y net-toolsnetstat -nltp#区域相关firewall-cmd --list-all-zones #查看所有区域信息firewall-cmd --get-active-zones #查看活动区域信息firewall-cmd --set-default-zone=public #设置public为默认区域firewall-cmd --get-default-zone #查看默认区域信息firewall-cmd --zone=public --add-interface=eth0 #将接口eth0加入区域public#接口相关firewall-cmd --zone=public --remove-interface=eth0 #从区域public中删除接口eth0firewall-cmd --zone=default --change-interface=eth0 #修改接口eth0所属区域为defaultfirewall-cmd --get-zone-of-interface=eth0 #查看接口eth0所属区域#路由转发# 将80端口的流量转发至8000firewall-cmd --add-forward-port=port=80:proto=tcp:toport=8000   # 将80端口的流量转发至10.10.0.1firewall-cmd --add-forward-port=proto=80:proto=tcp:toaddr=10.10.0.1 # 将80端口的流量转发至10.10.0.1:8000firewall-cmd --add-forward-port=proto=80:proto=tcp:toaddr=10.10.0.1:toport=8000# 检查是否允许伪装IPfirewall-cmd --query-masquerade  # 允许防火墙伪装IPfirewall-cmd --add-masquerade    # 禁止防火墙伪装IPfirewall-cmd --remove-masquerade#rich rulefirewall-cmd --permanent --zone=public --add-rich-rule='rule family="ipv4" source address="192.168.0.4/24" service name="http" accept'#删除--remove-rich-rule<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用iptables</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#检查状态</span><span class="token function">service</span> iptables status<span class="token comment" spellcheck="true">#安装</span>yum <span class="token function">install</span> -y iptables<span class="token comment" spellcheck="true">#查看端口</span>/sbin/iptables -L -n<span class="token comment" spellcheck="true">#生成/etc/sysconfig/iptables</span>iptables -P INPUT ACCESS<span class="token comment" spellcheck="true">#开放某个端口</span>/sbin/iptables -I INPUT -p tcp --dport 8080 -j ACCEPT<span class="token comment" spellcheck="true">#保存</span>iptable-save <span class="token operator">></span> /etc/sysconfig/iptables<span class="token comment" spellcheck="true">#检查</span><span class="token function">netstat</span> -an <span class="token operator">|</span><span class="token function">grep</span> 8080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>firewall</code>和<code>iptable</code>冲突，需要禁用一个</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#停止iptables服务</span>systemctl stop iptables<span class="token comment" spellcheck="true">#禁用iptables服务</span>systemctl mask iptables<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>区别</p><p><code>firewall</code>是centos7开始的新命令，底层还是<code>iptable</code></p></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> firewall </tag>
            
            <tag> 防火墙 </tag>
            
            <tag> iptable </tag>
            
            <tag> profile </tag>
            
            <tag> wget </tag>
            
            <tag> curl </tag>
            
            <tag> yum </tag>
            
            <tag> rpm </tag>
            
            <tag> 管道 </tag>
            
            <tag> 重定向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java连接数据库1</title>
      <link href="2020/10/15/java-lian-jie-shu-ju-ku-1/"/>
      <url>2020/10/15/java-lian-jie-shu-ju-ku-1/</url>
      
        <content type="html"><![CDATA[<h1 id="本文介绍java连接数据库的各种姿势（一）"><a href="#本文介绍java连接数据库的各种姿势（一）" class="headerlink" title="本文介绍java连接数据库的各种姿势（一）"></a>本文介绍java连接数据库的各种姿势（一）</h1><h2 id="驱动下载"><a href="#驱动下载" class="headerlink" title="驱动下载"></a>驱动下载</h2><h3 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/com.oracle/ojdbc6 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.oracle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>ojdbc6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>11.2.0.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/plugins-release/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>8.0.21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取connection的方式"><a href="#获取connection的方式" class="headerlink" title="获取connection的方式"></a>获取connection的方式</h2><ul><li><p>DriverManager</p><pre class="line-numbers language-java"><code class="language-java">Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>Connection connection <span class="token operator">=</span> DriverManager<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2 id="完整代码DbHelper-java"><a href="#完整代码DbHelper-java" class="headerlink" title="完整代码DbHelper.java"></a>完整代码<code>DbHelper.java</code></h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DbHelper</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Connection <span class="token function">getMysqlConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        String url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://localhost:3306/test"</span><span class="token punctuation">;</span>        String username <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>        String password <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/**         * com.mysql.cj.jdbc.Driver是mysql-connector-java 6 中的特性，相比mysql-connector-java 5 多了一个时区：serverTimezone         * com.mysql.jdbc.Driver和mysql-connector-java 5一起用。         * com.mysql.cj.jdbc.Driver和mysql-connector-java 6 一起用。         */</span>        String driver <span class="token operator">=</span> <span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">,</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Connection <span class="token function">getOracleConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        String driver <span class="token operator">=</span> <span class="token string">"oracle.jdbc.driver.OracleDriver"</span><span class="token punctuation">;</span>        String url <span class="token operator">=</span> <span class="token string">"jdbc:oracle:thin:@//127.0.0.1:1521/XE"</span><span class="token punctuation">;</span>        String username <span class="token operator">=</span> <span class="token string">"test"</span><span class="token punctuation">;</span>        String password <span class="token operator">=</span> <span class="token string">"test"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">,</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Connection <span class="token function">getConnection</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> String username<span class="token punctuation">,</span> String password<span class="token punctuation">,</span> String driver<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>            Connection connection <span class="token operator">=</span> DriverManager<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> connection<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试一把"><a href="#测试一把" class="headerlink" title="测试一把"></a>测试一把</h2><h4 id="测试前准备"><a href="#测试前准备" class="headerlink" title="测试前准备"></a>测试前准备</h4><h5 id="docker安装mysql"><a href="#docker安装mysql" class="headerlink" title="docker安装mysql"></a>docker安装mysql</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#查找镜像</span>docker search mysql<span class="token comment" spellcheck="true">#下载镜像</span>docker pull mysql<span class="token comment" spellcheck="true">#通过镜像创建容器</span>docker run -p3306:3306 --name mysqltest -v <span class="token variable">$PWD</span>/conf:/etc/mysql/conf.d -v <span class="token variable">$PWD</span>/logs:/logs -v <span class="token variable">$PWD</span>/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD<span class="token operator">=</span>123456 -d mysql-p 3306:3306：将容器的 3306 端口映射到主机的 3306 端口。-v -v <span class="token variable">$PWD</span>/conf:/etc/mysql/conf.d：将主机当前目录下的 conf/my.cnf 挂载到容器的 /etc/mysql/my.cnf。-v <span class="token variable">$PWD</span>/logs:/logs：将主机当前目录下的 logs 目录挂载到容器的 /logs。-v <span class="token variable">$PWD</span>/data:/var/lib/mysql ：将主机当前目录下的data目录挂载到容器的 /var/lib/mysql 。-e MYSQL_ROOT_PASSWORD<span class="token operator">=</span>123456：初始化 root 用户的密码。<span class="token comment" spellcheck="true">#进入容器</span>docker <span class="token function">exec</span> -it mysqltest /bin/bash<span class="token comment" spellcheck="true">#登录mysql</span>mysql -uroot -p123456<span class="token comment" spellcheck="true">#各种授权</span>GRANT ALL ON *.* TO <span class="token string">'root'</span>@<span class="token string">'%'</span><span class="token punctuation">;</span>flush privileges<span class="token punctuation">;</span>ALTER USER <span class="token string">'root'</span>@<span class="token string">'localhost'</span> IDENTIFIED BY <span class="token string">'password'</span> PASSWORD EXPIRE NEVER<span class="token punctuation">;</span>ALTER USER <span class="token string">'root'</span>@<span class="token string">'%'</span> IDENTIFIED WITH mysql_native_password BY <span class="token string">'123456'</span><span class="token punctuation">;</span>flush privileges<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#创建数据库</span>create database <span class="token function">test</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="docker安装oracle"><a href="#docker安装oracle" class="headerlink" title="docker安装oracle"></a>docker安装oracle</h4><pre class="line-numbers language-bash"><code class="language-bash">docker volume create myoracle-dbdocker run -d --name myoracletest -p 1521:1521 -p 9090:8080 --shm-size<span class="token operator">=</span>1g -v myoracle-db:/u01/app/oracle/oradata wnameless/oracle-xe-11g-r2:latest--name myoracletest指定创建的volume <span class="token keyword">.</span>--shm-size<span class="token operator">=</span>1g:设置/dev/shm的大小。格式为:。number必须大于0。unit可选，可以是b,k,m或g。如果不指定unit，系统默认使用字节。如果此参数不指定，默认使用64m。-v myoracle-db:/u01/app/oracle/oradata wnameless/oracle-xe-11g-r2:latest用于指定使用的Oracle镜像如果本地找不到的话那么就会去联网进行下载。<span class="token comment" spellcheck="true">#默认账号</span>port:1521sid:XEusername:system/syspassworld:oracle修改密码为:Oracle520<span class="token operator">!</span><span class="token comment" spellcheck="true">#管理界面修改初始密码</span>url: http://localhost:9090/apex/apex_adminusername:adminpassworld:Oracle520<span class="token operator">!</span><span class="token comment" spellcheck="true">#登录管理界面</span>url: http://localhost:9090/apexworkspace:internalusername:adminpassworld:oracle<span class="token comment" spellcheck="true">#进入数据库操作系统</span>docker <span class="token function">exec</span> -it myoracletest /bin/bash<span class="token function">su</span> - oraclesqlplus / as sysdbacreate user <span class="token function">test</span> identified by <span class="token function">test</span><span class="token punctuation">;</span>grant create session, connect, dba to <span class="token function">test</span><span class="token punctuation">;</span><span class="token keyword">exit</span>sqlplus test/testcreate table user_info<span class="token punctuation">(</span>id number, name varchar2<span class="token punctuation">(</span>100<span class="token punctuation">)</span>, password varchar2<span class="token punctuation">(</span>100<span class="token punctuation">))</span><span class="token punctuation">;</span>insert into user_info<span class="token punctuation">(</span>id, name, password<span class="token punctuation">)</span> values <span class="token punctuation">(</span>10000, <span class="token string">'测试用户'</span>, <span class="token string">'test_password'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>commit<span class="token punctuation">;</span>create sequence user_info_s start with 10001<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="测试DbHelperTest"><a href="#测试DbHelperTest" class="headerlink" title="测试DbHelperTest"></a>测试<code>DbHelperTest</code></h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DbHelperTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">connectionTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        Connection mysqlConn <span class="token operator">=</span> DbHelper<span class="token punctuation">.</span><span class="token function">getMysqlConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Assert<span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>mysqlConn<span class="token punctuation">)</span><span class="token punctuation">;</span>        mysqlConn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection oracleConn <span class="token operator">=</span> DbHelper<span class="token punctuation">.</span><span class="token function">getOracleConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Assert<span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>oracleConn<span class="token punctuation">)</span><span class="token punctuation">;</span>        oracleConn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"passed all connection test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="docker退出"><a href="#docker退出" class="headerlink" title="docker退出"></a>docker退出</h4><pre class="line-numbers language-bash"><code class="language-bash">docker stop mysqltestdocker stop myoracletest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="再次启动数据库"><a href="#再次启动数据库" class="headerlink" title="再次启动数据库"></a>再次启动数据库</h4><pre class="line-numbers language-bash"><code class="language-bash">docker start mysqltestdocker start myoracletest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java连接数据库的各种姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> oracle </tag>
            
            <tag> mysql </tag>
            
            <tag> docker </tag>
            
            <tag> 数据库连接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署</title>
      <link href="2020/10/14/hexo-bu-shu/"/>
      <url>2020/10/14/hexo-bu-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h2><ul><li>设置代理的方式</li></ul><pre class="line-numbers language-bash"><code class="language-bash">http_proxy<span class="token operator">=</span>http://userName:password@proxyAddress:port<span class="token function">export</span> http_proxy<span class="token operator">=</span><span class="token string">"http://127.0.0.1:1087"</span><span class="token function">export</span> https_proxy<span class="token operator">=</span><span class="token string">"http://127.0.0.1:1087"</span><span class="token function">export</span> all_proxy<span class="token operator">=</span>socks5://127.0.0.1:1080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>设置国内源</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span>brew --repo<span class="token variable">)</span></span>"</span><span class="token function">git</span> clone git://mirrors.ustc.edu.cn/homebrew-core.git/ /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core --depth<span class="token operator">=</span>1<span class="token function">git</span> remote set-url origin https://mirrors.ustc.edu.cn/brew.git<span class="token function">cd</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span>brew --repo<span class="token variable">)</span></span>/Library/Taps/homebrew/homebrew-core"</span><span class="token function">git</span> remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git<span class="token function">cd</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span>brew --repo<span class="token variable">)</span></span>"</span>/Library/Taps/caskroom/homebrew-cask<span class="token function">git</span> remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git<span class="token keyword">echo</span> <span class="token string">'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles'</span> <span class="token operator">>></span> ~/.bash_profile<span class="token function">source</span> ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>恢复源</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 重置brew.git:</span>$ <span class="token function">cd</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span>brew --repo<span class="token variable">)</span></span>"</span>$ <span class="token function">git</span> remote set-url origin https://github.com/Homebrew/brew.git<span class="token comment" spellcheck="true"># 重置homebrew-core.git:</span>$ <span class="token function">cd</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span>brew --repo<span class="token variable">)</span></span>/Library/Taps/homebrew/homebrew-core"</span>$ <span class="token function">git</span> remote set-url origin https://github.com/Homebrew/homebrew-core.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h2><pre class="line-numbers language-bash"><code class="language-bash">brew updatebrew doctorbrew <span class="token function">link</span> nodebrew uninstall nodebrew <span class="token function">install</span> node<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装淘宝代理"><a href="#安装淘宝代理" class="headerlink" title="安装淘宝代理"></a>安装淘宝代理</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token function">rm</span> proxy<span class="token function">npm</span> config <span class="token function">rm</span> https-proxy<span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="全局安装"><a href="#全局安装" class="headerlink" title="全局安装"></a>全局安装</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo<span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h1><pre class="line-numbers language-javascript"><code class="language-javascript">mkdir democd demohexo init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h2><pre class="line-numbers language-bash"><code class="language-bash">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">vi</span> _config.yml<span class="token comment" spellcheck="true"># Deployment</span><span class="token comment" spellcheck="true">## Docs: https://hexo.io/docs/deployment.html</span>deploy:  type: <span class="token function">git</span>  repo: https://github.com/sulinyy/sulinyy.github.io  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="git插件"><a href="#git插件" class="headerlink" title="git插件"></a>git插件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="推送git命令"><a href="#推送git命令" class="headerlink" title="推送git命令"></a>推送git命令</h4><pre class="line-numbers language-bash"><code class="language-bash">hexo clean（清除缓存）hexo g（上传到仓库）hexo d（部署）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h4><pre class="line-numbers language-bash"><code class="language-bash">增加index.md，配置首页地址index.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="git免密登录"><a href="#git免密登录" class="headerlink" title="git免密登录"></a>git免密登录</h4><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -C 你的邮箱.comhttps://github.com/settings/ssh/new把id_rsa.pub代码复制到key上<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h2><pre class="line-numbers language-bash"><code class="language-bash">// <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> 为布局，可选项为 <span class="token variable"><span class="token variable">`</span>post<span class="token variable">`</span></span>、<span class="token variable"><span class="token variable">`</span>page<span class="token variable">`</span></span>、<span class="token variable"><span class="token variable">`</span>draft<span class="token variable">`</span></span>，这将决定文章所在文件路径。// <span class="token operator">&lt;</span>title<span class="token operator">></span> 为文章标题hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="快捷命令"><a href="#快捷命令" class="headerlink" title="快捷命令"></a>快捷命令</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">vi</span> package.json<span class="token string">"dev"</span><span class="token keyword">:</span> <span class="token string">"hexo s"</span>,<span class="token string">"build"</span><span class="token keyword">:</span> <span class="token string">"hexo clean &amp; hexo deploy"</span>,<span class="token string">"git"</span><span class="token keyword">:</span> <span class="token string">"hexo clean &amp; hexo g &amp; hexo d"</span><span class="token function">npm</span> run build<span class="token function">npm</span> run dev<span class="token function">npm</span> run <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更换主题hexo-theme-matery"><a href="#更换主题hexo-theme-matery" class="headerlink" title="更换主题hexo-theme-matery"></a>更换主题hexo-theme-matery</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> themes<span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery<span class="token function">vi</span> <span class="token punctuation">..</span>/_config.ymltheme:hexo-theme-matery<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置类别"><a href="#配置类别" class="headerlink" title="配置类别"></a>配置类别</h4><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span class="token function">vi</span> /source/categories/index.mdtitle: categoriesdate: 2020-10-14 12:00:00type: <span class="token string">"categories"</span>layout: <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置标签"><a href="#配置标签" class="headerlink" title="配置标签"></a>配置标签</h4><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span><span class="token function">vi</span> /source/tags/index.mdtype: <span class="token string">"tags"</span>layout: <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
